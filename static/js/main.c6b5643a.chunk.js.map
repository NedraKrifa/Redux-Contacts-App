{"version":3,"sources":["Components/Layout/Table/HeadTable.js","Components/Layout/Table/BodyTable.js","actions/contactActions.js","actions/actionTypes.js","Components/Layout/Table/Table.js","Components/Contacts/Contacts.js","Components/Layout/Header/Header.js","Components/Contacts/ContactForm.js","App.js","serviceWorker.js","reducers/contactReducer.js","reducers/index.js","store.js","index.js"],"names":["HeadTable","map","head","key","BodyTable","setId","contacts","useSelector","state","dispatch","useDispatch","i","id","username","name","email","phone","className","onClick","type","deleteContact","Table","length","Contacts","useEffect","fetch","then","data","json","payload","useState","showContacts","setShowContacts","Header","ContactForm","title","classForm","userName","handleContactChange","addContact","value","placeholder","onChange","e","App","setUserName","setName","setEmail","setPhone","userNameEdit","setUserNameEdit","nameEdit","setNameEdit","emailEdit","setEmailEdit","phoneEdit","setPhoneEdit","idEdit","setIdEdit","index","setIndex","showEditForm","setShowEditForm","showForm","setShowForm","target","preventDefault","contact","addNewContact","editTheContact","Boolean","window","location","hostname","match","initialState","editContact","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducers","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c6b5643a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction HeadTable() {\r\n  const headings = [\r\n    \"Id\",\r\n    \"Username\",\r\n    \"Name\",\r\n    \"Email\",\r\n    \"Phone\",\r\n    \"Edit\",\r\n    \"Delete\",\r\n  ];\r\n  return (\r\n    <tr>\r\n      {headings.map((head) => (\r\n        <td key={head}>{head}</td>\r\n      ))}\r\n    </tr>\r\n  );\r\n}\r\nexport default HeadTable;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {deleteContact} from \"../../../actions/contactActions\"\r\n\r\nfunction BodyTable({ setId }) {\r\n  const contacts = useSelector((state) => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return contacts.map(({ id, username, name, email, phone },i) => (\r\n    <tr key={i}>\r\n      <td>{i+1}</td>\r\n      <td>{username}</td>\r\n      <td>{name}</td>\r\n      <td>{email}</td>\r\n      <td>{phone}</td>\r\n      <td><i className=\"fas fa-edit\" onClick={()=>setId(id,i)}></i></td>\r\n      <td><i className=\"fas fa-trash-alt\"onClick={()=>dispatch(deleteContact(id))} ></i></td>\r\n    </tr>\r\n  ));\r\n}\r\nexport default BodyTable;\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const getAllContacts = () => (dispatch) => {\r\n  fetch(\"http://jsonplaceholder.typicode.com/users\")\r\n    .then((data) => data.json())\r\n    .then((contacts) =>\r\n      dispatch({\r\n        type: actionTypes.GET_ALL_CONTACTS,\r\n        payload: contacts,\r\n      })\r\n    );\r\n};\r\n\r\nexport const addNewContact = (contact) => {\r\n  return {\r\n    type: actionTypes.ADD_NEW_CONTACT,\r\n    contact: contact,\r\n  };\r\n};\r\n\r\nexport const editTheContact = (contact, id) => {\r\n  return {\r\n    type: actionTypes.EDIT_CONTACT,\r\n    contact: contact,\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const deleteContact = (id) => {\r\n  return {\r\n    type: actionTypes.REMOVE_CONTACT,\r\n    id: id,\r\n  };\r\n};\r\n","export const GET_ALL_CONTACTS = 'GET_ALL_CONTACTS';\r\nexport const ADD_NEW_CONTACT = 'ADD_NEW_CONTACT';\r\nexport const EDIT_CONTACT = 'EDIT_CONTACT';\r\nexport const REMOVE_CONTACT = 'REMOVE_CONTACT';","import React from \"react\";\r\nimport HeadTable from \"./HeadTable\";\r\nimport BodyTable from \"./BodyTable\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Table({ setId }) {\r\n  const contacts = useSelector((state) => state.contacts);\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <HeadTable />\r\n      </thead>\r\n      {contacts.length ? (\r\n        <tbody>\r\n          <BodyTable setId={setId} />\r\n        </tbody>\r\n      ) : (\r\n        <p>\r\n          <i className=\"fas fa-undo\"></i>...loading\r\n        </p>\r\n      )}\r\n    </table>\r\n  );\r\n}\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Table from \"../Layout/Table/Table\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getAllContacts } from \"../../actions/contactActions\";\r\n\r\nfunction Contacts({ setId }) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(getAllContacts()), []);\r\n\r\n  const [showContacts, setShowContacts] = useState(false);\r\n\r\n  return (\r\n    <div className=\"contacts\">\r\n      <div onClick={() => setShowContacts(!showContacts)}>\r\n        {showContacts ? (\r\n          <i className=\"fas fa-angle-double-up\"></i>\r\n        ) : (\r\n          <i className=\"fas fa-angle-double-down\"></i>\r\n        )}\r\n      </div>\r\n      {showContacts ? (\r\n        <Table setId={setId} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Contacts;\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n           <h1>Contacts</h1> \r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction ContactForm({ title, classForm,userName, name, email, phone, handleContactChange, addContact }) {\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      <form>\r\n        <div>\r\n          <label>UserName</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            value={userName}\r\n            placeholder=\"username...\"\r\n            onChange={(e) => handleContactChange(e)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"name...\"\r\n            onChange={(e) => handleContactChange(e)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"email...\"\r\n            onChange={(e) => handleContactChange(e)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Phone</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            placeholder=\"phone...\"\r\n            onChange={(e) => handleContactChange(e)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" onClick={(e) => addContact(e)}>\r\n          <i className={classForm}></i>{title}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default ContactForm;\r\n","import React, { useState } from \"react\";\nimport Contacts from \"./Components/Contacts/Contacts\";\nimport Header from \"./Components/Layout/Header/Header\";\nimport ContactForm from \"./Components/Contacts/ContactForm\";\nimport \"./App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addNewContact, editTheContact } from \"./actions/contactActions\";\n\nfunction App() {\n  const contacts = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n\n  const [userName, setUserName] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [userNameEdit, setUserNameEdit] = useState(\"\");\n  const [nameEdit, setNameEdit] = useState(\"\");\n  const [emailEdit, setEmailEdit] = useState(\"\");\n  const [phoneEdit, setPhoneEdit] = useState(\"\");\n  const [idEdit, setIdEdit] = useState(\"\");\n  const [index,setIndex] = useState(\"\");\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const resetInputField = () => {\n    setUserName(\"\");\n    setName(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n  };\n  const resetInputEditField = () => {\n    setIdEdit(\"\");\n    setUserNameEdit(\"\");\n    setNameEdit(\"\");\n    setEmailEdit(\"\");\n    setPhoneEdit(\"\");\n  };\n  const handleContactChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"userName\":\n        setUserName(value);\n        break;\n      case \"name\":\n        setName(value);\n        break;\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"phone\":\n        setPhone(value);\n        break;\n    }\n  };\n  const addContact = (e) => {\n    e.preventDefault();\n    const contact = {\n      id: contacts[contacts.length-1].id + 1,\n      username: userName,\n      name: name,\n      email: email,\n      phone: phone,\n    };\n    dispatch(addNewContact(contact));\n    resetInputField();\n  };\n  const handleContactEditChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"userName\":\n        setUserNameEdit(value);\n        break;\n      case \"name\":\n        setNameEdit(value);\n        break;\n      case \"email\":\n        setEmailEdit(value);\n        break;\n      case \"phone\":\n        setPhoneEdit(value);\n        break;\n    }\n  };\n  const setId = (id,i) => {\n    setShowEditForm(true);\n    setIdEdit(id);\n    setIndex(i);\n    setNameEdit(contacts[i].name);\n    setUserNameEdit(contacts[i].username);\n    setEmailEdit(contacts[i].email);\n    setPhoneEdit(contacts[i].phone);\n  };\n  const editContact = (e) => {\n    e.preventDefault();\n    const contact = {\n      id: idEdit,\n      username: userNameEdit,\n      name: nameEdit,\n      email: emailEdit,\n      phone: phoneEdit,\n    };\n    dispatch(editTheContact(contact,index))\n    resetInputEditField();\n    setShowEditForm(false);\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"contact-form\">\n        <div onClick={() => setShowForm(!showForm)}>\n          {showForm ? (\n            <i className=\"fas fa-angle-double-up\"></i>\n          ) : (\n            <i className=\"fas fa-angle-double-down\"></i>\n          )}\n        </div>\n        {showForm ? (\n          <ContactForm\n            title=\"Add Contact\"\n            classForm=\"fas fa-user-plus\"\n            userName={userName}\n            name={name}\n            email={email}\n            phone={phone}\n            handleContactChange={handleContactChange}\n            addContact={addContact}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n      {showEditForm ? (\n        <ContactForm\n          title=\"Edit Contact\"\n          classForm=\"fas fa-edit\"\n          userName={userNameEdit}\n          name={nameEdit}\n          email={emailEdit}\n          phone={phoneEdit}\n          handleContactChange={handleContactEditChange}\n          addContact={editContact}\n        />\n      ) : (\n        \"\"\n      )}\n      <Contacts setId={setId} />\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = []\r\nconst editContact=(contacts,contact,id)=>{\r\n  contacts[id]=contact;\r\n  return contacts;\r\n}\r\nexport default function contactReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_ALL_CONTACTS:\r\n      return action.payload;\r\n    case actionTypes.ADD_NEW_CONTACT:\r\n      return [...state,action.contact];\r\n    case actionTypes.EDIT_CONTACT:\r\n      return editContact(state,action.contact,action.id);\r\n    case actionTypes.REMOVE_CONTACT:\r\n      return [...state.filter((contact) => contact.id !== action.id)];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nexport default combineReducers({\r\n  contacts: contactReducer,\r\n});\r\n\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}